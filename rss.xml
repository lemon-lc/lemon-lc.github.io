<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>lemon&apos;s blog</title>
        <link>https://blog.volc.top/</link>
        <description>Web development, Frontend, JavaScript</description>
        <lastBuildDate>Wed, 19 Feb 2020 14:38:55 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>https://github.com/webmasterish/vuepress-plugin-feed</generator>
        <item>
            <title><![CDATA[5. 最长回文子串]]></title>
            <link>https://blog.volc.top/leetcode/2019/10/15/_5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</link>
            <guid>https://blog.volc.top/leetcode/2019/10/15/_5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</guid>
            <pubDate>Mon, 14 Oct 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

给定一个字符串 s，找到 s 中最长的回文子串。你可以假设  s 的最大长度为 1000。

示例 1：

输入: "babad"
输出: "bab"
注意: "aba" 也是一个有效答案。

示例 2：

输入: "cbbd"
输出: "bb"

解法

解题思路：
  解题思路是使用官方的中心扩展算法实现的。
 ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/lemon-lc/vue-blog/images/images20191108221729.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[6. Z 字形变换]]></title>
            <link>https://blog.volc.top/leetcode/2019/11/01/_6-z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</link>
            <guid>https://blog.volc.top/leetcode/2019/11/01/_6-z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</guid>
            <pubDate>Thu, 31 Oct 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

将一个给定字符串根据给定的行数，以从上往下、从左到右进行  Z 字形排列。

比如输入字符串为 "LEETCODEISHIRING"  行数为 3 时，排列如下：

L C I R
E T O E S I I G
E D H N
之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如："LCIRETOESIIGEDHN"。

请你实现这个将字符串进行指定行数变换的函 ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/lemon-lc/vue-blog/images/images20191108225740.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[13. 罗马数字转整数]]></title>
            <link>https://blog.volc.top/leetcode/2019/11/12/_13-%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/</link>
            <guid>https://blog.volc.top/leetcode/2019/11/12/_13-%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/</guid>
            <pubDate>Mon, 11 Nov 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

罗马数字包含以下七种字符: I， V， X， L，C，D  和  M。

字符 数值
I 1
V 5
X 10
L 50
C 100
D 500
M 1000

例如， 罗马数字 2 写做  II ，即为两个并列的 1。12 写做  XII ，即为  X + II 。 27 写做   XXVII, 即为  XX + V + II 。

通常情况下，罗马数字中小的数字在大的数 ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/lemon-lc/vue-blog/images/images20191115125235.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[14. 最长公共前缀]]></title>
            <link>https://blog.volc.top/leetcode/2019/11/14/_14-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</link>
            <guid>https://blog.volc.top/leetcode/2019/11/14/_14-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</guid>
            <pubDate>Wed, 13 Nov 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

编写一个函数来查找字符串数组中的最长公共前缀。

如果不存在公共前缀，返回空字符串  ""。

示例  1:

输入: ["flower","flow","flight"]
输出: "fl"
示例  2:

输入: ["dog","racecar","car"]
输出: ""
解释: 输入不存在公共前缀。
说明:

所有输入只包含小写字母  a-z 。

解法:
 ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/lemon-lc/vue-blog/images/images20191113141300.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[15. 三数之和]]></title>
            <link>https://blog.volc.top/leetcode/2019/11/15/_15-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
            <guid>https://blog.volc.top/leetcode/2019/11/15/_15-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
            <pubDate>Thu, 14 Nov 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

给定一个包含 n 个整数的数组  nums，判断  nums  中是否存在三个元素 a，b，c ，使得  a + b + c = 0 ？找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。

例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，

满足要求的三元组集合为：
[
[-1, 0, 1],
[-1, -1, 2]
]
 ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/lemon-lc/vue-blog/images/images20191115125951.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[7. 整数反转]]></title>
            <link>https://blog.volc.top/leetcode/2019/11/02/_7-%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</link>
            <guid>https://blog.volc.top/leetcode/2019/11/02/_7-%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</guid>
            <pubDate>Fri, 01 Nov 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例  1:

输入: 123
输出: 321
  示例 2:

输入: -123
输出: -321
示例 3:

输入: 120
输出: 21
注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为  [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返 ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/lemon-lc/vue-blog/images/images20191108225740.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[8. 字符串转换整数 (atoi)]]></title>
            <link>https://blog.volc.top/leetcode/2019/11/05/_8-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/</link>
            <guid>https://blog.volc.top/leetcode/2019/11/05/_8-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/</guid>
            <pubDate>Mon, 04 Nov 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

请你来实现一个  atoi  函数，使其能将字符串转换成整数。

首先，该函数会根据需要丢弃无用的开头空格字符，直到寻找到第一个非空格的字符为止。

当我们寻找到的第一个非空字符为正或者负号时，则将该符号与之后面尽可能多的连续数字组合起来，作为该整数的正负号；假如第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成整数。

该字符串除了有效的整数部分之后也可能 ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/lemon-lc/vue-blog/images/images20191109095432.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[9. 回文数]]></title>
            <link>https://blog.volc.top/leetcode/2019/11/07/_9-%E5%9B%9E%E6%96%87%E6%95%B0/</link>
            <guid>https://blog.volc.top/leetcode/2019/11/07/_9-%E5%9B%9E%E6%96%87%E6%95%B0/</guid>
            <pubDate>Wed, 06 Nov 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

输入: 121
输出: true
示例  2:

输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
示例 3:

输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它 ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/lemon-lc/vue-blog/images/images20191109095958.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[11. 盛最多水的容器]]></title>
            <link>https://blog.volc.top/leetcode/2019/11/08/_11-%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</link>
            <guid>https://blog.volc.top/leetcode/2019/11/08/_11-%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</guid>
            <pubDate>Thu, 07 Nov 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

给定 n 个非负整数 a1，a2，...，an，每个数代表坐标中的一个点  (i, ai) 。在坐标内画 n 条垂直线，垂直线 i  的两个端点分别为  (i, ai) 和 (i, 0)。找出其中的两条线，使得它们与  x  轴共同构成的容器可以容纳最多的水。

说明：你不能倾斜容器，且  n  的值至少为 2。

![示例图](https://aliyun-lc-uplo ...]]></description>
            <enclosure url="https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/07/25/question_11.jpg">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[12. 整数转罗马数字]]></title>
            <link>https://blog.volc.top/leetcode/2019/11/09/_12-%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/</link>
            <guid>https://blog.volc.top/leetcode/2019/11/09/_12-%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/</guid>
            <pubDate>Fri, 08 Nov 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

罗马数字包含以下七种字符： I， V， X， L，C，D  和  M。

> 字符 数值
> I 1
> V 5
> X 10
> L 50
> C 100
> D 500
> M 1000

例如， 罗马数字 2 写做  II ，即为两个并列的 1。12 写做  XII ，即为  X + II 。 27 写做   XXVII, 即为  XX + V + II 。

通常情 ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/lemon-lc/vue-blog/images/images20191109125950.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[2. 两数相加]]></title>
            <link>https://blog.volc.top/leetcode/2019/09/12/_2-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</link>
            <guid>https://blog.volc.top/leetcode/2019/09/12/_2-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</guid>
            <pubDate>Wed, 11 Sep 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

给出两个非空的链表用来表示两个非负的整数。其中，它们各自的位数是按照   逆序   的方式存储的，并且它们的每个节点只能存储   一位   数字。

如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。

您可以假设除了数字 0 之外，这两个数都不会以 0  开头。

示例：

> 输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)< ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/volcanoliuc/vue-blog/images/images20190915213303.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[3. 无重复字符的最长子串]]></title>
            <link>https://blog.volc.top/leetcode/2019/09/16/_3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</link>
            <guid>https://blog.volc.top/leetcode/2019/09/16/_3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</guid>
            <pubDate>Sun, 15 Sep 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

给定一个字符串，请你找出其中不含有重复字符的   最长子串   的长度。

示例  1:

输入: "abcabcbb"
输出: 3
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
示例 2:

输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
示例 3:

输入: "pwwkew ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/lemon-lc/vue-blog/images/images20190916220026.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[4. 寻找两个有序数组的中位数]]></title>
            <link>https://blog.volc.top/leetcode/2019/09/17/_4-%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link>
            <guid>https://blog.volc.top/leetcode/2019/09/17/_4-%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid>
            <pubDate>Mon, 16 Sep 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

给定两个大小为 m 和 n 的有序数组  nums1 和  nums2。

请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为  O(log(m + n))。

你可以假设  nums1  和  nums2  不会同时为空。

示例 1:

nums1 = [1, 3]

nums2 = [2]

则中位数是 2.0
示例 2:

nums1 = [ ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/volcanoliuc/vue-blog/images/images20190916104630.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[1. 两数之和]]></title>
            <link>https://blog.volc.top/leetcode/2019/09/07/_1-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
            <guid>https://blog.volc.top/leetcode/2019/09/07/_1-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
            <pubDate>Fri, 06 Sep 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[题目描述

给定一个整数数组 nums  和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。
示例:

> 给定 nums = [2, 7, 11, 15], target = 9  因为 nums[0] + nums[1] = ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/volcanoliuc/vue-blog/images/images20190907140754.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[理解 JavaScript 作用域]]></title>
            <link>https://blog.volc.top/2018/12/10/%E7%90%86%E8%A7%A3javascript%E4%BD%9C%E7%94%A8%E5%9F%9F/</link>
            <guid>https://blog.volc.top/2018/12/10/%E7%90%86%E8%A7%A3javascript%E4%BD%9C%E7%94%A8%E5%9F%9F/</guid>
            <pubDate>Mon, 10 Dec 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[JavaScript 定义了一套如何存储以及查找变量的规则，这套规则就是作用域。]]></description>
            <enclosure url="https://raw.githubusercontent.com/volcanoliuc/blog/master/images/7e9adf9d26b1a18ffaf7f80129344279.gif">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[JavaScript 函数的传参]]></title>
            <link>https://blog.volc.top/2019/01/16/javascript%E5%87%BD%E6%95%B0%E7%9A%84%E4%BC%A0%E5%8F%82/</link>
            <guid>https://blog.volc.top/2019/01/16/javascript%E5%87%BD%E6%95%B0%E7%9A%84%E4%BC%A0%E5%8F%82/</guid>
            <pubDate>Wed, 16 Jan 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[JavaScript 中的函数传参是按值传递还是按引用传递呢？

> ECMAScript 中所有函数的参数都是按值传递的。

摘自 JavaScript高级程序设计

下面我们看一段代码

function changeStuff( ...]]></description>
            <enclosure url="https://raw.githubusercontent.com/volcanoliuc/blog/master/images/9150e4e5ly1fl77kzjvr5g208c08caa4.gif">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[理解 JavaScript 中的闭包]]></title>
            <link>https://blog.volc.top/2019/02/17/%E7%90%86%E8%A7%A3javascript%E4%B8%AD%E7%9A%84%E9%97%AD%E5%8C%85/</link>
            <guid>https://blog.volc.top/2019/02/17/%E7%90%86%E8%A7%A3javascript%E4%B8%AD%E7%9A%84%E9%97%AD%E5%8C%85/</guid>
            <pubDate>Sun, 17 Feb 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[闭包不是我们需要学习的语法或者模式才能使用的工具，闭包是基于词法作用域书写代码是所产生的自然结果，闭包在我们所写的代码中随处可见。

所以，什么是闭包呢？

> 闭包是指有权访问另一个函数作用域中的变量的函数。

闭包的产生

> 当函数可以记住并访问所在的词法作用域是，就产生了闭包，即使函数是在当前词法作用域之外执行。

根据闭包的定义其实创建闭包最常用 ...]]></description>
        </item>
        <item>
            <title><![CDATA[重绘和回流]]></title>
            <link>https://blog.volc.top/2020/02/19/%E5%9B%9E%E6%B5%81%E5%92%8C%E9%87%8D%E7%BB%98/</link>
            <guid>https://blog.volc.top/2020/02/19/%E5%9B%9E%E6%B5%81%E5%92%8C%E9%87%8D%E7%BB%98/</guid>
            <pubDate>Tue, 18 Feb 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[面试中经常被问到什么是回流和重绘，所以在这里做一个总结。

什么是重绘（repaints）

当一个元素的外观的可见性 visibility 发生改变的时候，重绘(repaint)也随之发生，但是不影响布局。

会触发重绘的属性包括：outline, visibility, color, background color, translate 等。

什么是回流（reflow） ...]]></description>
        </item>
    </channel>
</rss>